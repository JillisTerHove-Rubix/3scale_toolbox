version: 2.1

commands:
  install_dependencies:
    steps:
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies

      - run:
          name: Install dependencies
          command: |
            bundle install --jobs=3 --retry=3 --path vendor/bundle

      - save_cache:
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
    
  unittests:
    steps:
      - install_dependencies
      - run:
          name: Run unittests
          command: |
            bundle exec rake spec:unit
jobs:
  ruby-255-unittest:
    docker:
      - image: circleci/ruby:2.5.5
    working_directory: ~/repo
    steps:
      - checkout
      - unittests

  ruby-262-unittest:
    docker:
      - image: circleci/ruby:2.6.2
    working_directory: ~/repo
    steps:
      - checkout
      - unittests

  ruby-270-unittest:
    docker:
      - image: circleci/ruby:2.7.0
    working_directory: ~/repo
    steps:
      - checkout
      - unittests

  license_check:
    docker:
      - image: circleci/ruby:2.5.5
    working_directory: ~/repo
    steps:
      - checkout
      - install_dependencies
      - run:
          name: License check
          command: |
            bundle exec rake license_finder:check

  help_test:
    docker:
      - image: circleci/ruby:2.5.5
    working_directory: ~/repo
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Help test
          command: |
            bundle exec 3scale help

  integration_tests:
    docker:
      - image: circleci/ruby:2.5.5
    working_directory: ~/repo
    steps:
      - checkout
      - install_dependencies
      - run:
          name: Integration Tests
          command: |
            bundle exec rake spec:integration

workflows:
  version: 2
  basic_tests:
    jobs:
      - ruby-255-unittest
      - ruby-262-unittest
      - ruby-270-unittest
      - license_check
      - help_test

  integration:
    jobs:
      - manual_approval: # <<< A job that will require manual approval in the CircleCI web application.
          type: approval # <<< This key-value pair will set your workflow to a status of "On Hold"
          # On approval of the `hold` job, any successive job that requires the `hold` job will run.
      - integration_tests:
          context: supertestaccount
          requires:
            - manual_approval
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - integration_tests:
          context: supertestaccount
